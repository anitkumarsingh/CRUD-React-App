{"version":3,"sources":["Components/Exercise/Dialog/CreateFloatBtn.js","Components/Layouts/Header.js","Components/Layouts/Footer.js","Components/Exercise/index.js","Store.js","Components/App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","green","CreateFloatBtn","state","open","exercise","title","description","muscles","handleToggle","_this","setState","handleChangeText","name","event","Object","objectSpread","defineProperty","target","value","handleSubmitChange","props","onCreate","id","toLocaleLowerCase","replace","_this$props","this","classes","categories","_this$state","_this$state$exercise","react_default","a","createElement","Fab","color","aria-label","onClick","className","buttonst","Add_default","Dialog","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","formControl","root","join","ThemeProvider","TextField","margin","label","onChange","multiline","rowsMax","FormControl","InputLabel","htmlFor","Select","input","Input","map","cat","MenuItem","key","DialogActions","Button","outline","Component","withStyles","display","flexWrap","spacing","position","bottom","right","top","width","Header","_ref","onExerciseCreate","AppBar","Toolbar","Typography","variant","Dialog_CreateFloatBtn","fab","onSelect","catergory","console","log","index","findIndex","Paper","Tabs","e","indicatorColor","textColor","centered","Tab","item","styles","padding","marginTop","marginBottom","height","overflowY","Exercise","exercises","onDelete","onEditMode","editMode","_ref$exercise","_ref$exercise$title","_ref$exercise$descrip","Grid","container","sm","style","_ref2","_ref3","slicedToArray","group","react","textTransform","List","compoent","_ref4","ListItem","button","ListItemText","ListItemSecondaryAction","IconButton","edge","Edit_default","Delete_default","component","gutterBottom","App","getExercisesByMuscles","initialExeriseData","reduce","category","entries","concat","toConsumableArray","handleCategoryChange","handleExerciseChange","find","ex","handleExerciseCreate","onDeleteHandle","filter","editHandleChange","Layouts_Header","Components_Exercise","Layouts_Footer","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b373c6a0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport green from '@material-ui/core/colors/blue';\nimport { \n        withStyles,\n        Fab,\n        DialogTitle,\n        DialogContent,\n        DialogActions,\n        Dialog,\n        Button,\n        Select,\n        TextField,\n        FormControl,\n        InputLabel,\n        Input,\n        MenuItem\n     } from '@material-ui/core';\n\nconst styles = theme =>({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      margin: {\n        margin: theme.spacing(1),\n      },\n    buttonst:{\n        position: 'absolute',\n        bottom: '0',\n        right: '20px',\n        top: '530px'\n    },\n    formControl:{\n      width:400\n    } \n})\n  \n  const theme = createMuiTheme({\n    palette: {\n      primary: green,\n    },\n  });\nclass CreateFloatBtn extends Component{\n    state ={\n        open:false,  \n        exercise:{\n          title:'',\n          description:'',\n          muscles:''\n        }\n    }\n    handleToggle = () =>{\n        this.setState({open:!this.state.open})\n      }\n      handleChangeText = name =>event =>{\n        this.setState({\n          exercise:{\n           ...this.state.exercise,\n           [name]:event.target.value\n          }\n        })\n      }\n      handleSubmitChange = ()=>{\n       const { exercise } = this.state;\n       this.props.onCreate({\n         ...exercise,\n         id:exercise.title.toLocaleLowerCase().replace(/ /g,'-')\n        });\n       this.setState({\n         open:false,\n         exercise:{\n           title:'',\n           description:'',\n           muscles:''\n         }\n       })\n      }\n    render(){ \n        const { classes,muscles:categories } = this.props;\n        const { open , exercise:{title,description,muscles}} = this.state\n        return (\n        <div>\n            <Fab color=\"primary\" aria-label=\"Add\" onClick={this.handleToggle} \n                className={classes.buttonst}>\n             <AddIcon />\n           </Fab>\n           <Dialog open={open} onClose={this.handleClose} \n                   aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Create an exerices</DialogTitle>\n                <DialogContent>\n                   Fill out the form below.\n                </DialogContent>\n                <form className={[classes.formControl,classes.root].join('')}>\n                   <ThemeProvider theme={theme}>\n                        <TextField\n                           className={[classes.formControl,classes.margin].join(' ')}\n                           label=\"Title\"\n                           value={title}\n                           onChange={this.handleChangeText('title')}\n                        /><br/>\n                         <TextField\n                            multiline\n                            rowsMax=\"4\"\n                            className={[classes.formControl,classes.margin].join(' ')}\n                            value={description}\n                            label=\"Description\"\n                            onChange={this.handleChangeText('description')}\n                        /><br/>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"age-native-helper\"  className={classes.margin}>Category</InputLabel>\n                            <Select\n                                value={muscles}\n                                input={<Input name=\"age\" id=\"age-native-helper\" />}\n                                onChange={this.handleChangeText('muscles')}\n                                className={[classes.formControl,classes.margin].join(' ')}\n                            >\n                                {categories.map((cat)=>\n                                    <MenuItem value={cat} key={cat + 'id'}>{cat}</MenuItem>\n                                )}\n                            </Select>\n                        </FormControl>\n                </ThemeProvider>\n                   </form>\n                <DialogActions>\n                    <Button  \n                      color=\"primary\" outline=\"true\"\n                      onClick={this.handleSubmitChange}\n                      >\n                       Create\n                    </Button>\n                </DialogActions>\n           </Dialog>\n        </div>\n      )\n   }\n}\nexport default withStyles(styles)(CreateFloatBtn);","import React from 'react';\nimport { AppBar , Toolbar, Typography} from '@material-ui/core';\nimport CreateBtn from '../Exercise/Dialog/CreateFloatBtn';\n\nconst Header = ({muscles,onExerciseCreate}) =>{\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar >\n                <Typography variant=\"h6\">CRUD App\n                </Typography>\n                <CreateBtn muscles={muscles} onCreate={onExerciseCreate} />\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { withStyles } from '@material-ui/core/styles';\nconst styles = theme => ({\n    fab: {\n      margin: theme.spacing(1),\n      position: 'absolute',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  });\n\n const Footer = ({ muscles,onSelect,catergory}) =>{\n   console.log(muscles);\n   const index = catergory \n   ? muscles.findIndex((muscles)=> muscles===catergory) + 1 \n   : 0\n   console.log(index);\n     return(\n        <Paper >\n        <Tabs\n            value={index}\n            onChange ={(e,index)=>onSelect(index === 0 ? '':muscles[index - 1])}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n        >   \n            <Tab label=\"All\" />\n            {muscles.map((item,id)=><Tab label={item} key={id +'i'} />)}\n      </Tabs>\n    </Paper>\n     )\n }\n export default withStyles(styles)(Footer);","import React,{ Fragment} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport './Scroll.css';\nimport { Paper, \n         Typography,\n         List,ListItem,\n         ListItemText,\n         ListItemSecondaryAction,\n         IconButton \n        } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\n\nconst styles ={\n    Paper:{\n        padding:20,\n        marginTop:10,\n        marginBottom:10,\n        height:500,\n        overflowY:'auto'\n    }\n}\n\nconst Exercise = ({\n    exercises,\n    catergory,\n    onSelect,\n    onDelete,\n    onEditMode,\n    editMode,\n    exercise:{\n        id,\n        title ='Welcome!',\n        description ='  Please select list on left panel'\n    }\n  }) =>{\n    return(\n        <Grid container>\n          <Grid item sm={4}>\n             <Paper style={styles.Paper}>\n                {exercises.map(([group,exercises])=>{\n                    if(!catergory || catergory === group){\n                    return(\n                        <Fragment key={group + 'fragment'}>\n                        <Typography variant=\"subtitle1\" \n                                    style={{textTransform:'capitalize'}} \n                                    key={group + 'grps'}>\n                        {group}\n                        </Typography>\n                        <List compoent=\"ui\">\n                            {exercises.map(({id,title})=>{\n                            return(\n                                <ListItem button key={title +'id'}\n                                onClick={()=>onSelect(id)}\n                                >\n                                <ListItemText primary={title}/>\n                                <ListItemSecondaryAction>\n                                    <IconButton edge=\"end\" aria-label=\"Edit\" onClick={()=>onEditMode(id)}>\n                                        <Edit />\n                                    </IconButton>\n                               \n                                    <IconButton edge=\"end\" aria-label=\"Delete\" onClick={()=>onDelete(id)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            )\n                            })}\n                        \n                        </List>\n                    </Fragment>\n                    )\n                    }\n                    return null;   \n                })}\n        </Paper>\n          </Grid>\n          <Grid item sm>\n              {editMode ? (\n                   <Paper style={styles.Paper}>\n                    Hello\n               </Paper>\n              ):(\n                <Paper style={styles.Paper}>\n                <Typography variant=\"h4\" component=\"h4\" \n                            gutterBottom>\n                    {title}\n                </Typography>\n                <Typography variant=\"subtitle1\" component=\"h4\">\n                    {description}\n                </Typography>\n            </Paper>\n              )}\n             \n          </Grid>\n        </Grid>\n    )\n}\nexport default Exercise;","export const muscles = [\n    'shoulders', 'chest', 'arms', 'back', 'legs'\n  ]\n  \n  export const exercises = [\n    {\n      id: 'overhead-press',\n      title: 'Overhead Press',\n      description: 'Delts exercise...',\n      muscles: 'shoulders'\n    },\n    {\n      id: 'dips',\n      title: 'Dips',\n      description: 'Triceps exercise...',\n      muscles: 'arms'\n    },\n    {\n      id: 'barbell-curls',\n      title: 'Barbell Curls',\n      description: 'Biceps exercise...',\n      muscles: 'arms'\n    },\n    {\n      'id': 'bench-press',\n      title: 'Bench Press',\n      description: 'Chest exercise...',\n      muscles: 'chest'\n    },\n    {\n      id: 'pull-ups',\n      title: 'Pull Ups',\n      description: 'Back and biceps exercise...',\n      muscles: 'back'\n    },\n    {\n      id: 'deadlifts',\n      title: 'Deadlifts',\n      description: 'Back and leg exercise...',\n      muscles: 'back'\n    },\n    {\n      id: 'squats',\n      title: 'Squats',\n      description: 'Legs exercise...',\n      muscles: 'legs'\n    },\n  ]","import React,{ Fragment,Component } from 'react';\nimport { Header, Footer } from './Layouts';\nimport Exercise from './Exercise';\nimport { muscles,exercises } from '../Store';\n\nclass App extends Component{\n    state={\n        exercises,\n        exercise:{},\n    }\n    getExercisesByMuscles = () =>{\n      const initialExeriseData = muscles.reduce((exercises,category)=>({\n         ...exercises,\n         [category]:[]\n      }),{})\n      // console.log(muscles,initialExeriseData);\n        return Object.entries(\n         this.state.exercises.reduce((exercises,exercise)=>{\n         const { muscles } = exercise;\n         exercises[muscles]= [...exercises[muscles],exercise]\n         \n         return exercises;\n        },initialExeriseData)\n        )\n       \n    }\n    handleCategoryChange = (category)=>{\n      this.setState({category})\n    }\n    handleExerciseChange = id =>{\n        this.setState(({ exercises })=>({\n            exercise:exercises.find(ex => ex.id === id)\n        }))\n    }\n    handleExerciseCreate = exercise =>{\n    this.setState(({exercises})=>({\n      exercises:[\n        ...exercises,\n        exercise\n      ]\n    }))\n    }\n    onDeleteHandle = id =>{\n      this.setState(({exercises})=>({\n       exercises:exercises.filter((ex)=>ex.id !== id)\n      }))\n    }\n    editHandleChange = id =>{\n      this.setState(({ exercises })=>({\n        exercise:exercises.find(ex => ex.id === id),\n        editMode:true\n    }))\n    }\n    render(){\n    const exercises= this.getExercisesByMuscles();\n    const { category,exercise,editMode } = this.state\n    return(\n    <Fragment>\n        <Header \n         muscles={muscles} \n         onExerciseCreate={this.handleExerciseCreate}\n         />\n        <Exercise \n          exercises={exercises}\n          catergory={category}\n          onSelect={this.handleExerciseChange}\n          exercise={exercise}\n          onDelete={this.onDeleteHandle}\n          onEditMode={this.editHandleChange}\n          editMode={editMode}\n        />\n        <Footer \n          muscles={muscles} \n          onSelect ={this.handleCategoryChange}\n          catergory ={category}\n         />\n    </Fragment>\n                \n    )\n }\n}\nexport default  App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}